=============================================================================
List of generated methods in project: CAN_FreeRTOS

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "Pins1"     (component PinSettings)

Module "GreenLED"  (component BitIO)
   - GreenLED_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - GreenLED_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory 
                or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - GreenLED_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - GreenLED_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.
   - GreenLED_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "TU1"       (component TimerUnit_LDD)
   - TU1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the property <"Enable in init. code"> is set to 
                "yes" value then the device is also enabled (see the description of the <Enable> method). In this case the 
                <Enable> method is not necessary and needn't to be generated. This method can be called only once. Before the 
                second call of Init the <Deinit> must be called first.

Module "CAN1"      (component CAN_LDD)
   - CAN1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc. If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.
   - CAN1_SetRxIDFilterTable -Sets the receive ID filter table element specified by the parameter ElementIdx. This method is 
                available only if receiver FIFO mode is enabled.
   - CAN1_SendFrame -Sends a frame via the CAN device. This method allow to specify CAN buffer number, message ID, data to be 
                sent, frame type and whether the message will be sent after the request comes.
   - CAN1_ReadFrame -Reads a frame from the CAN device. The user is informed about CAN reception through OnFullRxBuffer event 
                or GetStateRX method.

Module "BlueLED"   (component BitIO)
   - BlueLED_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - BlueLED_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory 
                or a register and this value will be written to the pin after switching to the output mode (using 
                [SetDir(TRUE)]; see <Safe mode> property for limitations). If the direction is [output], it writes the value to 
                the pin. (Method is available only if the direction = _[output]_ or _[input/output]_).
   - BlueLED_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.
   - BlueLED_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if 
                the direction = _[output]_ or _[input/output]_.
   - BlueLED_NegVal -Negates (inverts) the output value. It is equivalent to the [PutVal(!GetVal())]. This method is available 
                only if the direction = _[output]_ or _[input/output]_.

Module "DbgTerminal" (component Term)
   - DbgTerminal_CRLF -Send CRLF to terminal.
   - DbgTerminal_SendStr -Send string to terminal.
   - DbgTerminal_SendNum -Send number to terminal.
   - DbgTerminal_SendFloatNum -Send a float number to the terminal. Due to the transformations the maximum float number is 
                limited according to the following conditions:     - positive number: 9 digits for integer part with 4 digits 
                for fractional part.     - negative numbers: 8 digits for integer part with 4 digits for fractional part.
   - DbgTerminal_SendChar -Send char to terminal.
   - DbgTerminal_Cls -Clear the terminal window.
   - DbgTerminal_CursorUp -Move cursor up.
   - DbgTerminal_CursorDown -Move cursor down.
   - DbgTerminal_CursorLeft -Move cursor left.
   - DbgTerminal_CursorRight -Move cursor right.
   - DbgTerminal_MoveTo -Move cursor to position x, y. Range of coordinates can be from 1 to the size, which depends on the 
                used terminal. Position [1,1] represents the upper left corner.
   - DbgTerminal_SetColor -Set foreground and background color. The following color constant are defined in the header file:   
                clBlack - Black color   clRed - Red color   clGreen - Green color   clYellow - Yellow color   clBlue - Blue 
                color   clMagenta - Magenta color   clCyan - Cyan color   clWhite - White color
   - DbgTerminal_EraseLine -Clears the current line from the cursor position to the end of line.
   - DbgTerminal_ReadChar -Read char from terminal.
   - DbgTerminal_KeyPressed -Test if char was received from the terminal.
   - DbgTerminal_ReadLine -Read string from the terminal. Waits until whole string is read. Method expects carriage return and 
                line feed (CRLF) escape sequence as a string termination.

Module "Cpu"       (component MKE06Z128LK4)
   - Cpu_EnableInt -Enables all maskable interrupts.
   - Cpu_DisableInt -Disables all maskable interrupts.

===================================================================================
